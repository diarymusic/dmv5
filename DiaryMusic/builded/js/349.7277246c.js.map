{"version":3,"file":"js/349.7277246c.js","mappings":"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","sources":["webpack://dm/./src/views/loginView.vue","webpack://dm/./src/assets/js/src/crypt/sha256_m.js","webpack://dm/./src/views/loginView.vue?778b"],"sourcesContent":["<template>\r\n  <div id=\"page\" class=\"site\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center align-items-center g-2\">\r\n        <div class=\"col-xs-8 col-sm-10 col-md-6 col-lg-6\">\r\n          <div class=\"hero text-black dark:text-white\">\r\n            <h1 class=\"typing\" data-text=\"登录到Diary Music 官网.\">\r\n              登录到Diary Music 官网.\r\n            </h1>\r\n            <p>\r\n              如果您没有账号,您将无法使用Diary Music 官网的完整功能,<br />您可\r\n              <a href=\"#/register\">在此注册</a>.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-8 col-sm-10 col-md-6 col-lg-6\">\r\n          <div class=\"login\">\r\n            <div class=\"main\">\r\n              <form>\r\n                <p class=\"side-icon text-black\">\r\n                  <input\r\n                    class=\"text-black\"\r\n                    type=\"email\"\r\n                    v-model=\"em\"\r\n                    placeholder=\"您的邮箱地址\"\r\n                    autocomplete=\"email\"\r\n                    autofocus\r\n                  />\r\n                  <i class=\"ri-mail-line\"></i>\r\n                </p>\r\n                <p class=\"side-icon text-black\">\r\n                  <input\r\n                    type=\"password\"\r\n                    v-model=\"pw\"\r\n                    placeholder=\"您的密码\"\r\n                    autocomplete=\"current-password\"\r\n                  />\r\n                  <i class=\"ri-eye-off-line\"></i>\r\n                </p>\r\n                <div class=\"side-icon text-black\">\r\n                  <div class=\"row justify-content-center align-items-center\">\r\n                    <div class=\"col-8\" id=\"vfi\">\r\n                      <input type=\"number\" v-model=\"vf\" placeholder=\"验证码\" />\r\n                      <!-- <i class=\"ri-mail-send-line\"></i> -->\r\n                    </div>\r\n                    <div class=\"col-4 text-black\" id=\"vfb\">\r\n                      <button type=\"button\" class=\"send\" @click=\"sendVerf\">\r\n                        <span\r\n                          class=\"spinner-border spinner-border-sm d-none\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                          id=\"vfsp\"\r\n                        ></span>\r\n                        <span class=\"text-black\">发送</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div class=\"row justify-content-center align-items-center g-2 loginActions\">\r\n                                        <div class=\"col-6\"> -->\r\n                  <!-- </div>\r\n                                        <div class=\"col-6\"> -->\r\n                  <router-link to=\"/forgot\">忘记密码</router-link>\r\n                  <!-- </div> -->\r\n                  <!-- </div> -->\r\n                </div>\r\n                <p>\r\n                  <input\r\n                    type=\"button\"\r\n                    class=\"submit\"\r\n                    value=\"登录\"\r\n                    @click=\"login\"\r\n                  />\r\n                </p>\r\n              </form>\r\n              <!-- <div class=\"options\">\r\n                                <div class=\"separator\">\r\n                                    <p>通过其它方式登录</p>\r\n                                </div>\r\n                                <ul>\r\n                                    <li><a href=\"#\"><i class=\"ri-pass-valid-fill ri-2x\"></i></a></li>\r\n                                </ul>\r\n                            </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {resolve} from \"@babel/core/lib/vendor/import-meta-resolve\";\r\n\r\nconst tpl = `<div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-animation=\"true\" data-bs-autohide=\"false\">\r\n                            <div class=\"toast-header\">\r\n                                <img src=\"\" class=\"rounded me-2\" alt=\"\">\r\n                                <strong class=\"me-auto\">{{msg}}</strong>\r\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                        </div>`;\r\nimport $ from \"jquery\";\r\nimport * as sha256 from \"@/assets/js/src/crypt/sha256_m.js\";\r\nimport Handlebars from \"handlebars\";\r\n// import \"@/assets/js/src/crypt/sha256_m.js\";\r\nfunction showLastToast() {\r\n  var toastElList = [].slice.call(document.querySelectorAll(\".toast\"));\r\n  var toastList = toastElList.map(function (toastEl) {\r\n    return new bootstrap.Toast(toastEl);\r\n  });\r\n  toastList[toastList.length - 1].show();\r\n}\r\nexport default {\r\n  data() {\r\n    return {\r\n      flag: false,\r\n      em: \"\",\r\n      pw: \"\",\r\n      vf: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    eyeOnOff() {\r\n      if (!this.flag) {\r\n        $(\"#eyeInput\").attr(\"type\", \"text\");\r\n        $(\"#eye\").attr(\"class\", \"ri-eye-line\");\r\n        this.flag = true;\r\n      } else {\r\n        $(\"#eyeInput\").attr(\"type\", \"password\");\r\n        $(\"#eye\").attr(\"class\", \"ri-eye-off-line\");\r\n        this.flag = false;\r\n      }\r\n    },\r\n    sendVerf() {\r\n      if (this.em !== null)\r\n        fetch(`/api/sendCode/${this.em}`)\r\n          .then((d) => d.json())\r\n          .then((d) => {\r\n            let dt = { msg: \"发送失败\" };\r\n            dt.msg = d.status == 200 ? \"发送成功\" : \"发送失败\";\r\n            $(Handlebars.compile(tpl)(dt).toString()).appendTo(\r\n              \".toast-container\"\r\n            );\r\n            showLastToast();\r\n          });\r\n    },\r\n    login() {\r\n      /*new Promise((resolve,reject)=>{\r\n\r\n        if (\r\n            this.em.toString() !== \"\" &&\r\n            this.pw.toString() !== \"\" &&\r\n            this.vf.toString() !== \"\"\r\n        ) {\r\n\r\n          let form = new FormData();\r\n          form.append(\"em\", this.em);\r\n          form.append(\"pw\", b64_sha256(this.pw));\r\n          form.append(\"vf\", this.vf);\r\n        } else {\r\n          // reject(0)\r\n          $(\r\n              Handlebars.compile(tpl)({\r\n                msg: \"登录失败（请勿留空信息）\",\r\n              }).toString()\r\n          ).appendTo(\".toast-container\");\r\n          showLastToast();\r\n        }\r\n      })*/\r\n          /*.then(v=>{\r\n\r\n        fetch(\"/api/login\", {\r\n          method: \"post\",\r\n          body: form,\r\n        })\r\n            .then((r) => r.json())\r\n            .then((r) => {\r\n              if(r.status==200){\r\n                resolve(0)\r\n              }else{\r\n                reject(1)\r\n              }\r\n            })\r\n            .catch((e) => reject(2)).finally()\r\n      })*/\r\n          /*.then(v=>{\r\n            let dt = { msg: \"登录失败\" };\r\n            if(r.status == 200){location.hash='#/'}\r\n            dt.msg =\r\n                r.status == 200\r\n                    ? `登录成功，登录有效期为${r.expires}`\r\n                    : \"登录失败\";\r\n            $(Handlebars.compile(tpl)(dt).toString()).appendTo(\r\n                \".toast-container\"\r\n            );\r\n            showLastToast();\r\n            fetch('/api/getUserInfo', {\r\n              headers: { Token: localStorage.token }\r\n            }).then(d => d.json()).then(d => {\r\n              if (d.status == 200) {\r\n                var un = d.data.alia === null ? d.data.username : d.data.alia\r\n                this.user = {\r\n                  name: un,\r\n                  ava: d.data.avatar,\r\n                  uid: d.data.id\r\n                }\r\n                this.isLogin = d.guest == 0\r\n              }\r\n              else {\r\n                localStorage.setItem('token', d.token)\r\n                fetch('/api/getUserInfo', {\r\n                  headers: { Token: localStorage.token }\r\n                }).then(d => d.json()).then(d => {\r\n                  if (d.status == 200)\r\n                    var un = d.data.alia === null ? d.data.username : d.data.alia\r\n                  this.user = {\r\n                    name: un,\r\n                    ava: d.data.avatar,\r\n                    uid: d.data.id\r\n                  }\r\n                  this.isLogin = d.guest == 0\r\n                })\r\n              }\r\n            })\r\n            if(r.status == 200) localStorage.setItem(\"token\", r.token);\r\n      })*/\r\n/*          .catch(e=>{\r\n\r\n      })*/\r\n\r\n    },\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n};\r\n</script>\r\n<style scoped>\r\n@import \"@/assets/css/style.css\";\r\n</style>\r\n","/*\r\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\r\n * in FIPS 180-2\r\n * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for details.\r\n * Also http://anmar.eu.org/projects/jssha2/\r\n */\r\n\r\n/*\r\n * Configurable variables. You may need to tweak these to be compatible with\r\n * the server-side, but the defaults work in most cases.\r\n */\r\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar b64pad = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\r\n\r\n/*\r\n * These are the functions you'll usually want to call\r\n * They take string arguments and return either hex or base-64 encoded strings\r\n */\r\nexport function hex_sha256(s) { return rstr2hex(rstr_sha256(str2rstr_utf8(s))); }\r\nexport function b64_sha256(s) { return rstr2b64(rstr_sha256(str2rstr_utf8(s))); }\r\nexport function any_sha256(s, e) { return rstr2any(rstr_sha256(str2rstr_utf8(s)), e); }\r\nexport function hex_hmac_sha256(k, d) { return rstr2hex(rstr_hmac_sha256(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nexport function b64_hmac_sha256(k, d) { return rstr2b64(rstr_hmac_sha256(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nexport function any_hmac_sha256(k, d, e) { return rstr2any(rstr_hmac_sha256(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\r\n\r\n/*\r\n * Perform a simple self-test to see if the VM is working\r\n */\r\nexport function sha256_vm_test() {\r\n    return hex_sha256(\"abc\").toLowerCase() ==\r\n        \"ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad\";\r\n}\r\n\r\n/*\r\n * Calculate the sha256 of a raw string\r\n */\r\nfunction rstr_sha256(s) {\r\n    return binb2rstr(binb_sha256(rstr2binb(s), s.length * 8));\r\n}\r\n\r\n/*\r\n * Calculate the HMAC-sha256 of a key and some data (raw strings)\r\n */\r\nfunction rstr_hmac_sha256(key, data) {\r\n    var bkey = rstr2binb(key);\r\n    if (bkey.length > 16) bkey = binb_sha256(bkey, key.length * 8);\r\n\r\n    var ipad = Array(16), opad = Array(16);\r\n    for (var i = 0; i < 16; i++) {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n    }\r\n\r\n    var hash = binb_sha256(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\r\n    return binb2rstr(binb_sha256(opad.concat(hash), 512 + 256));\r\n}\r\n\r\n/*\r\n * Convert a raw string to a hex string\r\n */\r\nfunction rstr2hex(input) {\r\n    try { hexcase } catch (e) { hexcase = 0; }\r\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    var output = \"\";\r\n    var x;\r\n    for (var i = 0; i < input.length; i++) {\r\n        x = input.charCodeAt(i);\r\n        output += hex_tab.charAt((x >>> 4) & 0x0F)\r\n            + hex_tab.charAt(x & 0x0F);\r\n    }\r\n    return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to a base-64 string\r\n */\r\nfunction rstr2b64(input) {\r\n    try { b64pad } catch (e) { b64pad = ''; }\r\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    var output = \"\";\r\n    var len = input.length;\r\n    for (var i = 0; i < len; i += 3) {\r\n        var triplet = (input.charCodeAt(i) << 16)\r\n            | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0)\r\n            | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\r\n        for (var j = 0; j < 4; j++) {\r\n            if (i * 8 + j * 6 > input.length * 8) output += b64pad;\r\n            else output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an arbitrary string encoding\r\n */\r\nfunction rstr2any(input, encoding) {\r\n    var divisor = encoding.length;\r\n    var remainders = Array();\r\n    var i, q, x, quotient;\r\n\r\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */\r\n    var dividend = Array(Math.ceil(input.length / 2));\r\n    for (i = 0; i < dividend.length; i++) {\r\n        dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n    }\r\n\r\n    /*\r\n     * Repeatedly perform a long division. The binary array forms the dividend,\r\n     * the length of the encoding is the divisor. Once computed, the quotient\r\n     * forms the dividend for the next step. We stop when the dividend is zero.\r\n     * All remainders are stored for later use.\r\n     */\r\n    while (dividend.length > 0) {\r\n        quotient = Array();\r\n        x = 0;\r\n        for (i = 0; i < dividend.length; i++) {\r\n            x = (x << 16) + dividend[i];\r\n            q = Math.floor(x / divisor);\r\n            x -= q * divisor;\r\n            if (quotient.length > 0 || q > 0)\r\n                quotient[quotient.length] = q;\r\n        }\r\n        remainders[remainders.length] = x;\r\n        dividend = quotient;\r\n    }\r\n\r\n    /* Convert the remainders to the output string */\r\n    var output = \"\";\r\n    for (i = remainders.length - 1; i >= 0; i--)\r\n        output += encoding.charAt(remainders[i]);\r\n\r\n    /* Append leading zero equivalents */\r\n    var full_length = Math.ceil(input.length * 8 /\r\n        (Math.log(encoding.length) / Math.log(2)))\r\n    for (i = output.length; i < full_length; i++)\r\n        output = encoding[0] + output;\r\n\r\n    return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-8.\r\n * For efficiency, this assumes the input is valid utf-16.\r\n */\r\nfunction str2rstr_utf8(input) {\r\n    var output = \"\";\r\n    var i = -1;\r\n    var x, y;\r\n\r\n    while (++i < input.length) {\r\n        /* Decode utf-16 surrogate pairs */\r\n        x = input.charCodeAt(i);\r\n        y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n        if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\r\n            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n            i++;\r\n        }\r\n\r\n        /* Encode output as utf-8 */\r\n        if (x <= 0x7F)\r\n            output += String.fromCharCode(x);\r\n        else if (x <= 0x7FF)\r\n            output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\r\n                0x80 | (x & 0x3F));\r\n        else if (x <= 0xFFFF)\r\n            output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\r\n                0x80 | ((x >>> 6) & 0x3F),\r\n                0x80 | (x & 0x3F));\r\n        else if (x <= 0x1FFFFF)\r\n            output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\r\n                0x80 | ((x >>> 12) & 0x3F),\r\n                0x80 | ((x >>> 6) & 0x3F),\r\n                0x80 | (x & 0x3F));\r\n    }\r\n    return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-16\r\n */\r\nfunction str2rstr_utf16le(input) {\r\n    var output = \"\";\r\n    for (var i = 0; i < input.length; i++)\r\n        output += String.fromCharCode(input.charCodeAt(i) & 0xFF,\r\n            (input.charCodeAt(i) >>> 8) & 0xFF);\r\n    return output;\r\n}\r\n\r\nfunction str2rstr_utf16be(input) {\r\n    var output = \"\";\r\n    for (var i = 0; i < input.length; i++)\r\n        output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\r\n            input.charCodeAt(i) & 0xFF);\r\n    return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an array of big-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\nfunction rstr2binb(input) {\r\n    var output = Array(input.length >> 2);\r\n    for (var i = 0; i < output.length; i++)\r\n        output[i] = 0;\r\n    for (var i = 0; i < input.length * 8; i += 8)\r\n        output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\r\n    return output;\r\n}\r\n\r\n/*\r\n * Convert an array of big-endian words to a string\r\n */\r\nfunction binb2rstr(input) {\r\n    var output = \"\";\r\n    for (var i = 0; i < input.length * 32; i += 8)\r\n        output += String.fromCharCode((input[i >> 5] >>> (24 - i % 32)) & 0xFF);\r\n    return output;\r\n}\r\n\r\n/*\r\n * Main sha256 function, with its support functions\r\n */\r\nfunction sha256_S(X, n) { return (X >>> n) | (X << (32 - n)); }\r\nfunction sha256_R(X, n) { return (X >>> n); }\r\nfunction sha256_Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\r\nfunction sha256_Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\r\nfunction sha256_Sigma0256(x) { return (sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22)); }\r\nfunction sha256_Sigma1256(x) { return (sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25)); }\r\nfunction sha256_Gamma0256(x) { return (sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3)); }\r\nfunction sha256_Gamma1256(x) { return (sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10)); }\r\nfunction sha256_Sigma0512(x) { return (sha256_S(x, 28) ^ sha256_S(x, 34) ^ sha256_S(x, 39)); }\r\nfunction sha256_Sigma1512(x) { return (sha256_S(x, 14) ^ sha256_S(x, 18) ^ sha256_S(x, 41)); }\r\nfunction sha256_Gamma0512(x) { return (sha256_S(x, 1) ^ sha256_S(x, 8) ^ sha256_R(x, 7)); }\r\nfunction sha256_Gamma1512(x) { return (sha256_S(x, 19) ^ sha256_S(x, 61) ^ sha256_R(x, 6)); }\r\n\r\nvar sha256_K = new Array\r\n    (\r\n        1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993,\r\n        -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987,\r\n        1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522,\r\n        264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,\r\n        -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585,\r\n        113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,\r\n        1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885,\r\n        -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344,\r\n        430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,\r\n        1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872,\r\n        -1866530822, -1538233109, -1090935817, -965641998\r\n    );\r\n\r\nfunction binb_sha256(m, l) {\r\n    var HASH = new Array(1779033703, -1150833019, 1013904242, -1521486534,\r\n        1359893119, -1694144372, 528734635, 1541459225);\r\n    var W = new Array(64);\r\n    var a, b, c, d, e, f, g, h;\r\n    var i, j, T1, T2;\r\n\r\n    /* append padding */\r\n    m[l >> 5] |= 0x80 << (24 - l % 32);\r\n    m[((l + 64 >> 9) << 4) + 15] = l;\r\n\r\n    for (i = 0; i < m.length; i += 16) {\r\n        a = HASH[0];\r\n        b = HASH[1];\r\n        c = HASH[2];\r\n        d = HASH[3];\r\n        e = HASH[4];\r\n        f = HASH[5];\r\n        g = HASH[6];\r\n        h = HASH[7];\r\n\r\n        for (j = 0; j < 64; j++) {\r\n            if (j < 16) W[j] = m[j + i];\r\n            else W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]),\r\n                sha256_Gamma0256(W[j - 15])), W[j - 16]);\r\n\r\n            T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)),\r\n                sha256_K[j]), W[j]);\r\n            T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));\r\n            h = g;\r\n            g = f;\r\n            f = e;\r\n            e = safe_add(d, T1);\r\n            d = c;\r\n            c = b;\r\n            b = a;\r\n            a = safe_add(T1, T2);\r\n        }\r\n\r\n        HASH[0] = safe_add(a, HASH[0]);\r\n        HASH[1] = safe_add(b, HASH[1]);\r\n        HASH[2] = safe_add(c, HASH[2]);\r\n        HASH[3] = safe_add(d, HASH[3]);\r\n        HASH[4] = safe_add(e, HASH[4]);\r\n        HASH[5] = safe_add(f, HASH[5]);\r\n        HASH[6] = safe_add(g, HASH[6]);\r\n        HASH[7] = safe_add(h, HASH[7]);\r\n    }\r\n    return HASH;\r\n}\r\n\r\nfunction safe_add(x, y) {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}","import { render } from \"./loginView.vue?vue&type=template&id=4514791d&scoped=true\"\nimport script from \"./loginView.vue?vue&type=script&lang=js\"\nexport * from \"./loginView.vue?vue&type=script&lang=js\"\n\nimport \"./loginView.vue?vue&type=style&index=0&id=4514791d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4514791d\"]])\n\nexport default __exports__"],"names":["id","class","_createElementVNode","href","role","_hoisted_16","_hoisted_17","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","type","$data","em","$event","placeholder","autocomplete","autofocus","_hoisted_9","_hoisted_10","pw","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","vf","_hoisted_15","onClick","_cache","args","$options","sendVerf","_createVNode","_component_router_link","to","value","login","Array","tpl","showLastToast","toastElList","slice","call","document","querySelectorAll","toastList","map","toastEl","bootstrap","Toast","length","show","data","flag","methods","eyeOnOff","this","$","attr","fetch","then","d","json","dt","msg","status","Handlebars","toString","appendTo","created","mounted","__exports__","render"],"sourceRoot":""}