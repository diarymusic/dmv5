<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.2530" tests="85" failures="0">
  <testsuite name="" timestamp="2022-08-02T09:06:05" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.Signature Generation" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.simple GET" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0030" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0010" classname="Signature Generation.simple GET">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.get with querystring" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0010" classname="Signature Generation.get with querystring">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.get with querystring Object" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0010" classname="Signature Generation.get with querystring Object">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST inside limit" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0000" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0000" classname="Signature Generation.POST inside limit">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST too large" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.1060" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.1050" classname="Signature Generation.POST too large">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST length equals max_body" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0010" classname="Signature Generation.POST length equals max_body">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST empty body" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0000" classname="Signature Generation.POST empty body">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.simple header signing with GET" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0020" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0010" classname="Signature Generation.simple header signing with GET">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.headers containing spaces" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0000" classname="Signature Generation.headers containing spaces">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.headers with leading and interior spaces" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0000" classname="Signature Generation.headers with leading and interior spaces">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.PUT test" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" time="0.0010" failures="0">
    <testcase name="should return the expected string when the signing request is run." time="0.0000" classname="Signature Generation.PUT test">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section" timestamp="2022-08-02T09:06:05" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0060" failures="0">
    <testcase name="reports the default host" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the default client_token" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the default client_secret" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the default access_token" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section" timestamp="2022-08-02T09:06:05" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0040" failures="0">
    <testcase name="reports the host associated with the section" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the client_token associated with the section" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the client_secret associated with the section" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the access_token associated with the section" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the section contains a host with the &quot;https://&quot; protocal specified" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0020" failures="0">
    <testcase name="reports a host with a valid URI string" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the section contains a host with the &quot;https://&quot; protocal specified">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the section passed does not exist" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0010" failures="0">
    <testcase name="throws the proper error" time="0.0010" classname="edgerc.the parsed edgrc file it returns.when the section passed does not exist">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the section has comments" timestamp="2022-08-02T09:06:05" tests="3" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0040" failures="0">
    <testcase name="has six configuration items" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the section has comments">
    </testcase>
    <testcase name="parses a value with a semicolon properly" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the section has comments">
    </testcase>
    <testcase name="parses a complex value properly" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the section has comments">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the envs are used with default section" timestamp="2022-08-02T09:06:05" tests="2" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0020" failures="0">
    <testcase name="has four configuration items" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the envs are used with default section">
    </testcase>
    <testcase name="has valid config values" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the envs are used with default section">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the envs are used with custom section" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" time="0.0020" failures="0">
    <testcase name="has valid config values" time="0.0000" classname="edgerc.the parsed edgrc file it returns.when the envs are used with custom section">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.Api..config" timestamp="2022-08-02T09:06:05" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0000" failures="0">
    <testcase name="reports the client token" time="0.0000" classname="Api..config">
    </testcase>
    <testcase name="reports the client secret" time="0.0000" classname="Api..config">
    </testcase>
    <testcase name="reports the access token" time="0.0000" classname="Api..config">
    </testcase>
    <testcase name="reports the API host" time="0.0000" classname="Api..config">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an API host that already contains the protocol" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0020" failures="0">
    <testcase name="it does not double declare the protocol" time="0.0000" classname="Api..config.when it is instantiated with an API host that already contains the protocol">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object" timestamp="2022-08-02T09:06:05" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0000" failures="0">
    <testcase name="reports the client token from the edgerc associated with the specified section" time="0.0000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <testcase name="reports the client secret from the edgerc associated with the specified section" time="0.0000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <testcase name="reports the access token from the edgerc associated with the specified section" time="0.0000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <testcase name="reports the API host from the edgerc associated with the specified section" time="0.0000" classname="Api..config.when it is instantiated with an object">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section" timestamp="2022-08-02T09:06:05" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0100" failures="0">
    <testcase name="reports the client token from the edgerc associated with the default section" time="0.0000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <testcase name="reports the client secret from the edgerc associated with the default section" time="0.0000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <testcase name="reports the access token from the edgerc associated with the default section" time="0.0000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <testcase name="reports the API host from the edgerc associated with the default section" time="0.0000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specify a path nor a section" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0050" failures="0">
    <testcase name="uses config from env variables with default section" time="0.0000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specify a path nor a section">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that specifies an inadequate path" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0040" failures="0">
    <testcase name="throws the appropriate error" time="0.0000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that specifies an inadequate path">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.when it is not instantiated with valid credentials" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0020" failures="0">
    <testcase name="throws the appropriate error" time="0.0000" classname="Api.when it is not instantiated with valid credentials">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0000" failures="0">
    <testcase name="should be chainable" time="0.0010" classname="Api.#auth">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when minimal request options are passed" timestamp="2022-08-02T09:06:05" tests="6" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0040" failures="0">
    <testcase name="adds an Authorization header to the request it is passed" time="0.0000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a default Content-Type of application/json" time="0.0000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a default GET method" time="0.0000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a default empty body" time="0.0000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a url is properly declared" time="0.0000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures no User-Agent is added when AkamaiCLI env variables not set" time="0.0000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when more specific request options are passed" timestamp="2022-08-02T09:06:05" tests="6" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0090" failures="0">
    <testcase name="adds an Authorization header to the request it is passed" time="0.0000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="ensures a default Content-Type of application/json" time="0.0000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="uses the specified POST method" time="0.0000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="uses the specified body parsed as a JSON string" time="0.0000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="extends the default request options with any others specified" time="0.0000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="ensures provided User-Agent header is preserved" time="0.0000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when gzip response format is expected" timestamp="2022-08-02T09:06:05" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0050" failures="0">
    <testcase name="adds an Authorization header to the request it is passed" time="0.0000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <testcase name="ensures a default GET method" time="0.0000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <testcase name="ensures a default empty body" time="0.0000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <testcase name="should return response as buffer" time="0.0000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when no User-Agent set in the request" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0010" failures="0">
    <testcase name="should set User-Agent" time="0.0000" classname="Api.#auth.when akamai cli user agent is expected.when no User-Agent set in the request">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when User-Agent is already in the request" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0030" failures="0">
    <testcase name="should append to already present User-Agent header" time="0.0000" classname="Api.#auth.when akamai cli user agent is expected.when User-Agent is already in the request">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI info is set" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0020" failures="0">
    <testcase name="should only set AkamaiCLI/version User-Agent" time="0.0000" classname="Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI info is set">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI command info is set" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0020" failures="0">
    <testcase name="should only set AkamaiCLI/version User-Agent" time="0.0000" classname="Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI command info is set">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#send" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0000" failures="0">
    <testcase name="should be chainable" time="0.0190" classname="Api.#send">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when authentication is done with a simple options object specifying only a path" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0100" failures="0">
    <testcase name="sends the HTTP GET request created by #auth" time="0.0090" classname="Api.#send.when authentication is done with a simple options object specifying only a path">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when authentication is done with a more complex options object specifying only a path" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0030" failures="0">
    <testcase name="sends the HTTP created by #auth" time="0.0030" classname="Api.#send.when authentication is done with a more complex options object specifying only a path">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when the initial request redirects" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0100" failures="0">
    <testcase name="correctly follows the redirect and re-signs the request" time="0.0090" classname="Api.#send.when the initial request redirects">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when the initial request fails" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" time="0.0030" failures="0">
    <testcase name="correctly handles the error in the callback" time="0.0020" classname="Api.#send.when the initial request fails">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.helpers.#base64Sha256" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0010" failures="0">
    <testcase name="returns a base 64 encoded Sha256 of the string it is passed" time="0.0000" classname="helpers.#base64Sha256">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#base64HmacSha256" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
    <testcase name="returns a base 64 encoded Hmac Sha256 of the message and key it is passed" time="0.0000" classname="helpers.#base64HmacSha256">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#canonicalizeHeaders" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0010" failures="0">
    <testcase name="turns the headers into a tab separate string of key/value pairs" time="0.0000" classname="helpers.#canonicalizeHeaders">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#contentHash" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.helpers.#contentHash.when the request is not a POST" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
    <testcase name="returns an empty string" time="0.0000" classname="helpers.#contentHash.when the request is not a POST">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#contentHash.when the request is a POST" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0010" failures="0">
    <testcase name="returns a base64 encoded sha256 of the body" time="0.0000" classname="helpers.#contentHash.when the request is a POST">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#dataToSign" timestamp="2022-08-02T09:06:05" tests="2" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
    <testcase name="properly formats the request data to sign" time="0.0000" classname="helpers.#dataToSign">
    </testcase>
    <testcase name="properly formats the request data when passing headersToSign" time="0.0000" classname="helpers.#dataToSign">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#signingKey" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0010" failures="0">
    <testcase name="returns the proper signing key" time="0.0000" classname="helpers.#signingKey">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#isRedirect" timestamp="2022-08-02T09:06:05" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Root Suite.helpers.#isRedirect.when it is passed a status code indicating a redirect" timestamp="2022-08-02T09:06:05" tests="5" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0010" failures="0">
    <testcase name="returns true when it is passed a 300" time="0.0000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 301" time="0.0000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 302" time="0.0000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 303" time="0.0000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 307" time="0.0000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#isRedirect.when it is passed a status code that does not indicate a redirect" timestamp="2022-08-02T09:06:05" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0010" failures="0">
    <testcase name="returns false when it is passed a 200" time="0.0000" classname="helpers.#isRedirect.when it is passed a status code that does not indicate a redirect">
    </testcase>
  </testsuite>
  <testsuite name="Root Suite.helpers.#resolveHome" timestamp="2022-08-02T09:06:05" tests="2" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" time="0.0000" failures="0">
    <testcase name="resolves ~" time="0.0000" classname="helpers.#resolveHome">
    </testcase>
    <testcase name="resolves path without ~" time="0.0000" classname="helpers.#resolveHome">
    </testcase>
  </testsuite>
</testsuites>