<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="" timestamp="2022-08-02T10:39:16" tests="0" package="" hostname="undefined" id="0" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation" hostname="undefined" id="1" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.simple GET" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.simple GET" hostname="undefined" id="2" errors="0" time="0.002" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.001" classname="Signature Generation.simple GET">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.get with querystring" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.get with querystring" hostname="undefined" id="3" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.001" classname="Signature Generation.get with querystring">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.get with querystring Object" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.get with querystring Object" hostname="undefined" id="4" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.get with querystring Object">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST inside limit" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.POST inside limit" hostname="undefined" id="5" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.POST inside limit">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST too large" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.POST too large" hostname="undefined" id="6" errors="0" time="0.117" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.116" classname="Signature Generation.POST too large">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST length equals max_body" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.POST length equals max_body" hostname="undefined" id="7" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.POST length equals max_body">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.POST empty body" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.POST empty body" hostname="undefined" id="8" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.POST empty body">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.simple header signing with GET" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.simple header signing with GET" hostname="undefined" id="9" errors="0" time="0.002" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.001" classname="Signature Generation.simple header signing with GET">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.headers containing spaces" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.headers containing spaces" hostname="undefined" id="10" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.headers containing spaces">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.headers with leading and interior spaces" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.headers with leading and interior spaces" hostname="undefined" id="11" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.headers with leading and interior spaces">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Signature Generation.PUT test" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/test.js" package="Root Suite.Signature Generation.PUT test" hostname="undefined" id="12" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should return the expected string when the signing request is run." time="0.000" classname="Signature Generation.PUT test">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc" hostname="undefined" id="13" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns" hostname="undefined" id="14" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section" timestamp="2022-08-02T10:39:16" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section" hostname="undefined" id="15" errors="0" time="0.003" failures="0">
    <properties>
    </properties>
    <testcase name="reports the default host" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the default client_token" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the default client_secret" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the default access_token" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is not passed a second argument indicating config section">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section" timestamp="2022-08-02T10:39:16" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section" hostname="undefined" id="16" errors="0" time="0.003" failures="0">
    <properties>
    </properties>
    <testcase name="reports the host associated with the section" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the client_token associated with the section" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the client_secret associated with the section" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <testcase name="reports the access_token associated with the section" time="0.000" classname="edgerc.the parsed edgrc file it returns.when it is passed a second argument indicating config section">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the section contains a host with the &quot;https://&quot; protocal specified" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when the section contains a host with the &quot;https://&quot; protocal specified" hostname="undefined" id="17" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="reports a host with a valid URI string" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the section contains a host with the &quot;https://&quot; protocal specified">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the section passed does not exist" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when the section passed does not exist" hostname="undefined" id="18" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="throws the proper error" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the section passed does not exist">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the section has comments" timestamp="2022-08-02T10:39:16" tests="3" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when the section has comments" hostname="undefined" id="19" errors="0" time="0.002" failures="0">
    <properties>
    </properties>
    <testcase name="has six configuration items" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the section has comments">
    </testcase>
    <testcase name="parses a value with a semicolon properly" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the section has comments">
    </testcase>
    <testcase name="parses a complex value properly" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the section has comments">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the envs are used with default section" timestamp="2022-08-02T10:39:16" tests="2" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when the envs are used with default section" hostname="undefined" id="20" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="has four configuration items" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the envs are used with default section">
    </testcase>
    <testcase name="has valid config values" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the envs are used with default section">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.edgerc.the parsed edgrc file it returns.when the envs are used with custom section" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/edgerc_test.js" package="Root Suite.edgerc.the parsed edgrc file it returns.when the envs are used with custom section" hostname="undefined" id="21" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="has valid config values" time="0.000" classname="edgerc.the parsed edgrc file it returns.when the envs are used with custom section">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api" hostname="undefined" id="22" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api..config" timestamp="2022-08-02T10:39:16" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api..config" hostname="undefined" id="23" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="reports the client token" time="0.000" classname="Api..config">
    </testcase>
    <testcase name="reports the client secret" time="0.000" classname="Api..config">
    </testcase>
    <testcase name="reports the access token" time="0.000" classname="Api..config">
    </testcase>
    <testcase name="reports the API host" time="0.000" classname="Api..config">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an API host that already contains the protocol" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api..config.when it is instantiated with an API host that already contains the protocol" hostname="undefined" id="24" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="it does not double declare the protocol" time="0.000" classname="Api..config.when it is instantiated with an API host that already contains the protocol">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object" timestamp="2022-08-02T10:39:16" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api..config.when it is instantiated with an object" hostname="undefined" id="25" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="reports the client token from the edgerc associated with the specified section" time="0.000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <testcase name="reports the client secret from the edgerc associated with the specified section" time="0.000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <testcase name="reports the access token from the edgerc associated with the specified section" time="0.000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <testcase name="reports the API host from the edgerc associated with the specified section" time="0.000" classname="Api..config.when it is instantiated with an object">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section" timestamp="2022-08-02T10:39:16" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section" hostname="undefined" id="26" errors="0" time="0.007" failures="0">
    <properties>
    </properties>
    <testcase name="reports the client token from the edgerc associated with the default section" time="0.000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <testcase name="reports the client secret from the edgerc associated with the default section" time="0.000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <testcase name="reports the access token from the edgerc associated with the default section" time="0.000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <testcase name="reports the API host from the edgerc associated with the default section" time="0.000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specfy a section">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specify a path nor a section" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specify a path nor a section" hostname="undefined" id="27" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="uses config from env variables with default section" time="0.000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that does not specify a path nor a section">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that specifies an inadequate path" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api..config.when it is instantiated with an object.when it is instantiated with an object that specifies an inadequate path" hostname="undefined" id="28" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="throws the appropriate error" time="0.000" classname="Api..config.when it is instantiated with an object.when it is instantiated with an object that specifies an inadequate path">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.when it is not instantiated with valid credentials" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.when it is not instantiated with valid credentials" hostname="undefined" id="29" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="throws the appropriate error" time="0.000" classname="Api.when it is not instantiated with valid credentials">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth" hostname="undefined" id="30" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="should be chainable" time="0.001" classname="Api.#auth">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when minimal request options are passed" timestamp="2022-08-02T10:39:16" tests="6" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when minimal request options are passed" hostname="undefined" id="31" errors="0" time="0.006" failures="0">
    <properties>
    </properties>
    <testcase name="adds an Authorization header to the request it is passed" time="0.000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a default Content-Type of application/json" time="0.000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a default GET method" time="0.000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a default empty body" time="0.000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures a url is properly declared" time="0.000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <testcase name="ensures no User-Agent is added when AkamaiCLI env variables not set" time="0.000" classname="Api.#auth.when minimal request options are passed">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when more specific request options are passed" timestamp="2022-08-02T10:39:16" tests="6" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when more specific request options are passed" hostname="undefined" id="32" errors="0" time="0.005" failures="0">
    <properties>
    </properties>
    <testcase name="adds an Authorization header to the request it is passed" time="0.000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="ensures a default Content-Type of application/json" time="0.000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="uses the specified POST method" time="0.000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="uses the specified body parsed as a JSON string" time="0.000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="extends the default request options with any others specified" time="0.000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <testcase name="ensures provided User-Agent header is preserved" time="0.000" classname="Api.#auth.when more specific request options are passed">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when gzip response format is expected" timestamp="2022-08-02T10:39:16" tests="4" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when gzip response format is expected" hostname="undefined" id="33" errors="0" time="0.003" failures="0">
    <properties>
    </properties>
    <testcase name="adds an Authorization header to the request it is passed" time="0.000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <testcase name="ensures a default GET method" time="0.000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <testcase name="ensures a default empty body" time="0.000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <testcase name="should return response as buffer" time="0.000" classname="Api.#auth.when gzip response format is expected">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when akamai cli user agent is expected" hostname="undefined" id="34" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when no User-Agent set in the request" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when akamai cli user agent is expected.when no User-Agent set in the request" hostname="undefined" id="35" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should set User-Agent" time="0.000" classname="Api.#auth.when akamai cli user agent is expected.when no User-Agent set in the request">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when User-Agent is already in the request" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when akamai cli user agent is expected.when User-Agent is already in the request" hostname="undefined" id="36" errors="0" time="0.002" failures="0">
    <properties>
    </properties>
    <testcase name="should append to already present User-Agent header" time="0.000" classname="Api.#auth.when akamai cli user agent is expected.when User-Agent is already in the request">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI info is set" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI info is set" hostname="undefined" id="37" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should only set AkamaiCLI/version User-Agent" time="0.001" classname="Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI info is set">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI command info is set" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI command info is set" hostname="undefined" id="38" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="should only set AkamaiCLI/version User-Agent" time="0.000" classname="Api.#auth.when akamai cli user agent is expected.when only AkamaiCLI command info is set">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#send" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#send" hostname="undefined" id="39" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="should be chainable" time="0.017" classname="Api.#send">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when authentication is done with a simple options object specifying only a path" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#send.when authentication is done with a simple options object specifying only a path" hostname="undefined" id="40" errors="0" time="0.008" failures="0">
    <properties>
    </properties>
    <testcase name="sends the HTTP GET request created by #auth" time="0.006" classname="Api.#send.when authentication is done with a simple options object specifying only a path">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when authentication is done with a more complex options object specifying only a path" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#send.when authentication is done with a more complex options object specifying only a path" hostname="undefined" id="41" errors="0" time="0.003" failures="0">
    <properties>
    </properties>
    <testcase name="sends the HTTP created by #auth" time="0.002" classname="Api.#send.when authentication is done with a more complex options object specifying only a path">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when the initial request redirects" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#send.when the initial request redirects" hostname="undefined" id="42" errors="0" time="0.007" failures="0">
    <properties>
    </properties>
    <testcase name="correctly follows the redirect and re-signs the request" time="0.007" classname="Api.#send.when the initial request redirects">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.Api.#send.when the initial request fails" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/api_test.js" package="Root Suite.Api.#send.when the initial request fails" hostname="undefined" id="43" errors="0" time="0.002" failures="0">
    <properties>
    </properties>
    <testcase name="correctly handles the error in the callback" time="0.001" classname="Api.#send.when the initial request fails">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers" hostname="undefined" id="44" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#base64Sha256" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#base64Sha256" hostname="undefined" id="45" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="returns a base 64 encoded Sha256 of the string it is passed" time="0.001" classname="helpers.#base64Sha256">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#base64HmacSha256" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#base64HmacSha256" hostname="undefined" id="46" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="returns a base 64 encoded Hmac Sha256 of the message and key it is passed" time="0.000" classname="helpers.#base64HmacSha256">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#canonicalizeHeaders" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#canonicalizeHeaders" hostname="undefined" id="47" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="turns the headers into a tab separate string of key/value pairs" time="0.000" classname="helpers.#canonicalizeHeaders">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#contentHash" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#contentHash" hostname="undefined" id="48" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#contentHash.when the request is not a POST" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#contentHash.when the request is not a POST" hostname="undefined" id="49" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="returns an empty string" time="0.000" classname="helpers.#contentHash.when the request is not a POST">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#contentHash.when the request is a POST" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#contentHash.when the request is a POST" hostname="undefined" id="50" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <testcase name="returns a base64 encoded sha256 of the body" time="0.000" classname="helpers.#contentHash.when the request is a POST">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#dataToSign" timestamp="2022-08-02T10:39:16" tests="2" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#dataToSign" hostname="undefined" id="51" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="properly formats the request data to sign" time="0.000" classname="helpers.#dataToSign">
    </testcase>
    <testcase name="properly formats the request data when passing headersToSign" time="0.000" classname="helpers.#dataToSign">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#signingKey" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#signingKey" hostname="undefined" id="52" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="returns the proper signing key" time="0.001" classname="helpers.#signingKey">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#isRedirect" timestamp="2022-08-02T10:39:16" tests="0" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#isRedirect" hostname="undefined" id="53" errors="0" time="0.000" failures="0">
    <properties>
    </properties>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#isRedirect.when it is passed a status code indicating a redirect" timestamp="2022-08-02T10:39:16" tests="5" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#isRedirect.when it is passed a status code indicating a redirect" hostname="undefined" id="54" errors="0" time="0.002" failures="0">
    <properties>
    </properties>
    <testcase name="returns true when it is passed a 300" time="0.000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 301" time="0.000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 302" time="0.000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 303" time="0.000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <testcase name="returns true when it is passed a 307" time="0.000" classname="helpers.#isRedirect.when it is passed a status code indicating a redirect">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#isRedirect.when it is passed a status code that does not indicate a redirect" timestamp="2022-08-02T10:39:16" tests="1" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#isRedirect.when it is passed a status code that does not indicate a redirect" hostname="undefined" id="55" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="returns false when it is passed a 200" time="0.000" classname="helpers.#isRedirect.when it is passed a status code that does not indicate a redirect">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
  <testsuite name="Root Suite.helpers.#resolveHome" timestamp="2022-08-02T10:39:16" tests="2" file="/Users/dstopka/repo/akamaiopen-edgegrid-node/test/src/helpers_test.js" package="Root Suite.helpers.#resolveHome" hostname="undefined" id="56" errors="0" time="0.001" failures="0">
    <properties>
    </properties>
    <testcase name="resolves ~" time="0.000" classname="helpers.#resolveHome">
    </testcase>
    <testcase name="resolves path without ~" time="0.000" classname="helpers.#resolveHome">
    </testcase>
    <system-out>
    </system-out>
    <system-err>
    </system-err>
  </testsuite>
</testsuites>